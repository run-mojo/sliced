dist: trusty
language: rust
services: docker
sudo: required

# Cache built crates for much faster builds.
cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

notifications:
  email:
    on_success: never

env:
  global:
    - CRATE_NAME=sliced

matrix:
  include:
    # Stable.
#    - env: TARGET=x86_64-unknown-linux-gnu
#    - env: TARGET=x86_64-apple-darwin
#    - rust: nightly
#      os: osx
#    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
#    - rust: nightly

    # Testing other channels
    - env:
        - NIGHTLY=true
        - TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env:
        - NIGHTLY=true
        - TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install: set -e

install:
  - bash ci/install.sh
  - source ~/.cargo/env || true

before_script:
  - rustup component add rustfmt-preview;
  - cargo +nightly install clippy --force;

#before_script:
#  - if [[ $NIGHTLY == 'true' ]]; then rustup component add rustfmt-preview; fi
#  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly install clippy --force; fi

script:
  - bash ci/script.sh

  # Rustfmt is finally available as a preview component outside of nightly, but
  # unfortunately we're using a few configuration options that are considered
  # unstable so it still only works on nightly.
  - cargo +nightly fmt --all -- --write-mode=diff;

  # The `-D warnings` argument means that Clippy will send a non-zero exit code
  # if it encounters any linting problems (thus failing the build).
  - cargo +nightly clippy -- -D warnings;

#  # Rustfmt is finally available as a preview component outside of nightly, but
#  # unfortunately we're using a few configuration options that are considered
#  # unstable so it still only works on nightly.
#  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly fmt --all -- --write-mode=diff; fi
#
#  # The `-D warnings` argument means that Clippy will send a non-zero exit code
#  # if it encounters any linting problems (thus failing the build).
#  - if [[ $NIGHTLY == 'true' ]]; then cargo +nightly clippy -- -D warnings; fi

after_script: set +e

before_deploy:
  - bash ci/before_deploy.sh

branches:
  only:
    # Pushes and pull requests to the master branch.
    - master

    # IMPORTANT Ruby regex to match tags. Required, or travis won't trigger
    # deploys when a new tag is pushed. This regex matches semantic versions
    # like v1.2.3-rc4+2016.02.22
    - /^v\d+\.\d+\.\d+.*$/

deploy:
  provider: releases
  # Generated with `travis encrypt $token`. Token is scoped to `public_repo`.
  api_key:
    secure: "fB4ww4yqipicCIQFr83IFWqNieMykmF1ch9HzNnImgHcvoS+z+w0MQA3NhL1b2GU7Cf8pf6ebBw9h5GxTfDBdkTn8X4JoGjlGJSNCZNGAN0vp60EiHA4hodLagUrmKVSx7lRfyYa+JLLYYXNJ1E9Aw6f4SywHlwuKjc28FHXxzO5Oe5yyPXLUsbGVEtaJoWaAWJEYnSTRD5TI8G1qXFz9JASrx6VUkWz1CdJOL6tN3YAdzlgQd/yjvELU/IU0DVpCeftjZWUKhCJuhMDwjjwBsDMK7UD9YDeFEpu3eEs305EMxbFfldhEVM5ks3B5XhtHY4h5xdtRr+9wUUGPV12Mqb9UevSH/cVJ+QdLtXAQB19pDJ7vEeXMWS07UV+cGlmQd7O2TQhU9555sZMWmC8wj7azcVvY7G1bN6udp56Ib42PYk+6MNwrtqfVVJfZn0NtzrR8iyEFUHb6Cbts6SBHwrQtXWKtWfAPhBqg26CkjbUUShebb4GXL6F6Sp8TajxaVV4i+iXhcLXIFvuz8042LGDn7yIjE6iWYWGUWJHNJ125hNXBODhOOvXRhoTh06RpvF3m8cxxGoMfZw52hUPIHKzOPeZE5c5Q+ze8sAeSrGDhTgMpH04iUUd022hfv6fCJz5Q+4tGTbTiacBct14oABHQYxocK43xxZzss7TXQE="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  # Don't delete the artifacts from previous phases.
  skip_cleanup: true
  # Deploy when a new tag is pushed.
  on:
    # Channel to use to produce the release artifacts. NOTE make sure you only
    # release *once* per target.
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true
  provider: releases
  skip_cleanup: true
